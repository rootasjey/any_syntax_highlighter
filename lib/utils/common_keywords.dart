/*
this file contains most used keywords across the most used programming languages
 */

/*const commonKeywords = {
  'esac',
  'fi',
  'done',
  'when',
  'until',
  'begin',
  'then',
  'case',
  'decltype',
  'in',
  'enum',
  'unsigned',
  'thread_local',
  'FALSE',
  'inline',
  'package',
  'False',
  'none',
  'int',
  'extension',
  'convenience',
  'debugger',
  'NaN',
  'for',
  'namespace',
  'asm',
  'func',
  'required',
  'type',
  'precedence',
  'extends',
  'using',
  'explicit',
  'associativity',
  'Type',
  'typedef',
  'reinterpret_cast',
  'typename',
  'select',
  'except',
  'requires',
  'private',
  'protected',
  'signed',
  'delegate',
  'xor',
  'static',
  'template',
  'TRUE',
  'typealias',
  'Self',
  'void',
  'subscript',
  'weak',
  'not_eq',
  'bitor',
  'nil',
  'raise',
  'where',
  'delete',
  'nonmutating',
  'noexcept',
  'implicit',
  'Inf',
  'long',
  'not',
  'async',
  'boolean',
  'strictfp',
  'bool',
  'constexpr',
  'switch',
  'internal',
  'register',
  'or',
  'char16t',
  'alignof',
  'base',
  'chan',
  'transient',
  'fixed',
  'assert',
  'throws',
  'True',
  'or_eq',
  'didSet',
  'byte',
  'union',
  'NA',
  'None',
  'lazy',
  'optional',
  'lock',
  'as',
  'sealed',
  'willSet',
  'float',
  'inout',
  'get',
  'extern',
  'implements',
  'init',
  'else',
  'NULL',
  'override',
  'set',
  'abstract',
  'stackalloc',
  'right',
  'params',
  'object',
  'mutating',
  'operator',
  'is',
  'repeat',
  'uint',
  'event',
  'unsafe',
  'native',
  'alignas',
  'defer',
  'char',
  'def',
  'protocol',
  'bitand',
  'out',
  'if',
  'mixin',
  'while',
  'show',
  'import',
  'deferred',
  'volatile',
  'short',
  'wchart',
  'xor_eq',
  'rethrow',
  'hide',
  'exports',
  'synchronized',
  'class',
  'next',
  'compl',
  'library',
  'nonlocal',
  'factory',
  'auto',
  'deinit',
  'and_eq',
  'global',
  'virtual',
  'interface',
  'dynamic',
  'Protocol',
  'null',
  'module',
  'let',
  'new',
  'left',
  'true',
  'infix',
  'throw',
  'do',
  'go',
  'part',
  'unchecked',
  'ushort',
  'this',
  'map',
  'yield',
  'self',
  'Function',
  'del',
  'readonly',
  'unowned',
  'default',
  'struct',
  'Func',
  'mutable',
  'catch',
  'static_cast',
  'continue',
  'await',
  'sizeof',
  'ref',
  'with',
  'pass',
  'prefix',
  'ulong',
  'super',
  'typeid',
  'function',
  'static_assert',
  'const_cast',
  'break',
  'false',
  'of',
  'try',
  'postfix',
  'sbyte',
  'final',
  'decimal',
  'export',
  'and',
  'undefined',
  'double',
  'char32t',
  'external',
  'dynamicType',
  'from',
  'typeof',
  'var',
  'finally',
  'sync',
  'instanceof',
  'range',
  'covariant',
  'const',
  'on',
  'elif',
  'checked',
  'return',
  'public',
  'friend',
  'dynamic_cast',
  'lambda',
  'fallthrough',
  'goto'
};

bool isKeyword(String key) => commonKeywords.contains(key);

 */

class Keywords {
  static Map<String, Set<String>> userKeywords = {};

  static bool isKeyword(Set<String> keySet, String value) {
    for (String key in keySet) {
      var s1 = _keywords[key], s2 = userKeywords[key];
      if ((s1 != null && s1.contains(value)) ||
          (s2 != null && s2.contains(value))) {
        return true;
      }
    }
    return false;
  }

  static const _keywords = {
    'java': {
      "if",
      "while",
      "else",
      "do",
      "try",
      "finally",
      "return",
      "break",
      "continue",
      "new",
      "void",
      "throw",
      "throws",
      "double",
      "var",
      "const",
      "abstract",
      "float",
      "long",
      "final",
      "exports",
      "public",
      "private",
      "protected",
      "catch",
      "int",
      "goto",
      "for",
      "switch",
      "case",
      "default",
      "package",
      "native",
      "module",
      "interface",
      "transient",
      "instanceof",
      "short",
      "requires",
      "implements",
      "true",
      "false",
      "null",
      "strictfp",
      "synchronized",
      "static",
      "this",
      "class",
      "super",
      "volatile",
      "enum",
      "import",
      "extends",
      "boolean",
      "byte",
      "assert"
    },
    'python': {
      'False',
      'await',
      'else',
      'import',
      'pass',
      'None',
      'break',
      'except',
      'in',
      'raise',
      'True',
      'class',
      'finally',
      'is',
      'return',
      'and',
      'continue',
      'for',
      'lambda',
      'try',
      'as',
      'def',
      'from',
      'nonlocal',
      'while',
      'assert',
      'del',
      'global',
      'not',
      'with',
      'async',
      'elif',
      'if',
      'or',
      'yield'
    },
    'c': {
      "if",
      "while",
      "else",
      "do",
      "auto",
      "char",
      "return",
      "break",
      "continue",
      "extern",
      "void",
      "register",
      "short",
      "double",
      "sizeof",
      "const",
      "signed",
      "float",
      "long",
      "struct",
      "typedef",
      "union",
      "catch",
      "int",
      "goto",
      "for",
      "switch",
      "case",
      "default",
      "unsigned",
      "static",
      "volatile",
      "enum"
    },
    'cpp': {
      'alignas',
      'decltype',
      'namespace',
      'struct',
      'alignof',
      'default',
      'new',
      'switch',
      'and',
      'delete',
      'noexcept',
      'template',
      'and_eq',
      'do',
      'not',
      'this',
      'asm',
      'double',
      'not_eq',
      'thread_local',
      'auto',
      'dynamic_cast',
      'nullptr',
      'throw',
      'bitand',
      'else',
      'operator',
      'true',
      'bitor',
      'enum',
      'or',
      'try',
      'bool',
      'explicit',
      'or_eq',
      'typedef',
      'break',
      'export',
      'private',
      'typeid',
      'case',
      'extern',
      'protected',
      'typename',
      'catch',
      'false',
      'public',
      'union',
      'char',
      'float',
      'register',
      'unsigned',
      'char16t',
      'for',
      'reinterpret_cast',
      'using',
      'char32t',
      'friend',
      'return',
      'virtual',
      'class',
      'goto',
      'short',
      'void',
      'compl',
      'if',
      'signed',
      'volatile',
      'const',
      'inline',
      'sizeof',
      'wchart',
      'constexpr',
      'int',
      'static',
      'while',
      'const_cast',
      'long',
      'static_assert',
      'xor',
      'continue',
      'mutable',
      'static_cast',
      'xor_eq'
    },
    'csharp': {
      'abstract',
      'as',
      'base',
      'bool',
      'break',
      'byte',
      'case',
      'catch',
      'char',
      'checked',
      'class',
      'const',
      'continue',
      'decimal',
      'default',
      'delegate',
      'do',
      'double',
      'else',
      'enum',
      'event',
      'explicit',
      'extern',
      'false',
      'finally',
      'fixed',
      'float',
      'for',
      'foreach',
      'goto',
      'if',
      'implicit',
      'in',
      'int',
      'interface',
      'internal',
      'is',
      'lock',
      'long',
      'namespace',
      'new',
      'null',
      'object',
      'operator',
      'out',
      'override',
      'params',
      'private',
      'protected',
      'public',
      'readonly',
      'ref',
      'return',
      'sbyte',
      'sealed',
      'short',
      'sizeof',
      'stackalloc',
      'static',
      'string',
      'struct',
      'switch',
      'this',
      'throw',
      'true',
      'try',
      'typeof',
      'uint',
      'ulong',
      'unchecked',
      'unsafe',
      'ushort',
      'using',
      'virtual',
      'void',
      'volatile',
      'while'
    },
    'dart': {
      'abstract',
      'else',
      'import',
      'super',
      'as',
      'enum',
      'in',
      'switch',
      'assert',
      'export',
      'interface',
      'sync',
      'async',
      'extends',
      'is',
      'this',
      'await',
      'extension',
      'library',
      'throw',
      'break',
      'external',
      'mixin',
      'true',
      'case',
      'factory',
      'new',
      'try',
      'catch',
      'false',
      'null',
      'typedef',
      'class',
      'final',
      'on',
      'var',
      'const',
      'finally',
      'operator',
      'void',
      'continue',
      'for',
      'part',
      'while',
      'covariant',
      'Function',
      'rethrow',
      'with',
      'default',
      'get',
      'return',
      'yield',
      'deferred',
      'hide',
      'set',
      'do',
      'if',
      'show',
      'dynamic',
      'implements',
      'static'
    },
    'go': {
      'break',
      'default',
      'func',
      'interface',
      'select',
      'case',
      'defer',
      'go',
      'map',
      'struct',
      'chan',
      'else',
      'goto',
      'package',
      'switch',
      'const',
      'fallthrough',
      'if',
      'range',
      'type',
      'continue',
      'for',
      'import',
      'return',
      'var'
    },
    'javascript': {
      "if",
      "while",
      "else",
      "do",
      "try",
      "finally",
      "return",
      "break",
      "continue",
      "new",
      "void",
      "throw",
      "yield",
      "var",
      "const",
      "export",
      "typeof",
      "public",
      "private",
      "protected",
      "catch",
      "in",
      "of",
      "for",
      "switch",
      "case",
      "default",
      "package",
      "NaN",
      "module",
      "interface",
      "undefined",
      "instanceof",
      "async",
      "await",
      "implements",
      "true",
      "false",
      "null",
      "delete",
      "function",
      "static",
      "this",
      "class",
      "super",
      "enum",
      "import",
      "extends",
      "let",
      "debugger",
      "with"
    },
    'r': {
      'if',
      'else',
      'repeat',
      'while',
      'function',
      'for',
      'next',
      'break',
      'TRUE',
      'FALSE',
      'NULL',
      'Inf',
      'NaN',
      'NA',
      'NA_integer_',
      'NA_real_',
      'NA_complex_',
      'NA_character_'
    },
    'swift': {
      'class',
      'deinit',
      'enum',
      'extension',
      'Func',
      'import',
      'init',
      'internal',
      'let',
      'operator',
      'private',
      'protocol',
      'public',
      'static',
      'struct',
      'subscript',
      'typealias',
      'var',
      'break',
      'case',
      'continue',
      'default',
      'do',
      'else',
      'fallthrough',
      'for',
      'if',
      'in',
      'return',
      'switch',
      'where',
      'while',
      'as',
      'dynamicType',
      'false',
      'is',
      'nil',
      'self',
      'Self',
      'super',
      'true',
      '_COLUMN_',
      'fILE_',
      'fUNCTION_',
      '_LINE_',
      'associativity',
      'convenience',
      'dynamic',
      'didSet',
      'final',
      'get',
      'infix',
      'inout',
      'lazy',
      'left',
      'mutating',
      'none',
      'nonmutating',
      'optional',
      'override',
      'postfix',
      'precedence',
      'prefix',
      'Protocol',
      'required',
      'right',
      'set',
      'Type',
      'unowned',
      'weak',
      'willSet'
    }
  };
}
